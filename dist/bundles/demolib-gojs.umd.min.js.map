{"version":3,"sources":["ng://demolib-gojs/src/gojs.component.ts","ng://demolib-gojs/src/gojs.module.ts"],"names":["GojsComponent","_this","this","go.Diagram","$","go.GraphObject","make","model","go.TreeModel","diagram","initialContentAlignment","go.Spot","Center","undoManager","isEnabled","layout","go.TreeLayout","angle","layerSpacing","nodeTemplate","go.Node","background","doubleClick","e","obj","clicked","part","thisemp","data","startTransaction","newemp","key","getNextKey","name","title","source","parent","addNodeData","commitTransaction","mouseDragEnter","node","prev","selnode","selection","first","mayWorkFor","shape","findObject","_prevFill","fill","mouseDragLeave","next","mouseDrop","link","findTreeParentLink","fromNode","toolManager","linkingTool","insertLink","port","go.Panel","portId","fromLinkable","toLinkable","cursor","go.Picture","desiredSize","go.Size","margin","go.Margin","go.Binding","maxSize","defaultAlignment","Left","go.RowColumnDefinition","column","width","go.TextBlock","row","columnSpan","font","editable","isMultiline","minSize","makeTwoWay","v","wrap","WrapFit","contextMenu","go.Adornment","click","adornedPart","chl","findTreeChildrenNodes","emp","value","setParentKeyForNodeData","findTreeParentNode","removeNodeData","removeParts","findTreeParts","node1","node2","isInTreeOf","nodeIdCounter","findNodeDataForKey","linkTemplate","go.Link","Orthogonal","corner","relinkableFrom","relinkableTo","go.Shape","strokeWidth","stroke","nodeDataArray","prototype","ngOnInit","div","diagramRef","nativeElement","Component","args","selector","template","ViewChild","GojsModule","NgModule","imports","CommonModule","FormsModule","RouterModule","forChild","path","component","declarations"],"mappings":"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","sourcesContent":["import { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport * as go from 'gojs';\n\n@Component({\n  selector: 'app-gojs',\n  templateUrl: './gojs.component.html',\n  styleUrls: ['./gojs.component.css']\n})\nexport class GojsComponent implements OnInit {\n  diagram: go.Diagram = new go.Diagram();\n\n  @ViewChild('diagramDiv')\n  private diagramRef: ElementRef;\n\n  constructor() {\n    const $ = go.GraphObject.make;\n    const model = $(go.TreeModel);\n    this.diagram = new go.Diagram();\n    this.diagram.initialContentAlignment = go.Spot.Center;\n    this.diagram.undoManager.isEnabled = true;\n    this.diagram.layout = $(go.TreeLayout, {\n      angle: 90,\n      layerSpacing: 35\n    });\n\n    this.diagram.nodeTemplate = $(\n      go.Node,\n      'Horizontal',\n      { background: '#17a2b1' },\n      {\n        doubleClick: (e, obj) => {\n          var clicked = obj.part;\n          if (clicked !== null) {\n            var thisemp = clicked.data;\n            this.diagram.startTransaction('add employee');\n            var newemp = {\n              key: getNextKey(),\n              name: '(new person)',\n              title: '',\n              source: 'https://www.acrpnet.org/wp-content/uploads/2016/09/User-Icon-Gray.jpg',\n              parent: thisemp.key\n            };\n            this.diagram.model.addNodeData(newemp);\n            this.diagram.commitTransaction('add employee');\n          }\n        }\n      },\n      {\n        // handle dragging a Node onto a Node to (maybe) change the reporting relationship\n        mouseDragEnter: (e, node, prev) => {\n          var diagram = node.diagram;\n          var selnode = diagram.selection.first();\n          if (!mayWorkFor(selnode, node)) return;\n          var shape = node.findObject('SHAPE');\n          if (shape) {\n            shape._prevFill = shape.fill; // remember the original brush\n            shape.fill = 'darkred';\n          }\n        },\n        mouseDragLeave: (e, node, next) => {\n          var shape = node.findObject('SHAPE');\n          if (shape && shape._prevFill) {\n            shape.fill = shape._prevFill; // restore the original brush\n          }\n        },\n        mouseDrop: (e, node) => {\n          var diagram = node.diagram;\n          var selnode = diagram.selection.first(); // assume just one Node in selection\n          if (mayWorkFor(selnode, node)) {\n            // find any existing link into the selected node\n            var link = selnode.findTreeParentLink();\n            if (link !== null) {\n              // reconnect any existing link\n              link.fromNode = node;\n            } else {\n              // else create a new link\n              diagram.toolManager.linkingTool.insertLink(node, node.port, selnode, selnode.port);\n            }\n          }\n        }\n      },\n      $(\n        go.Panel,\n        'Horizontal',\n        {\n          name: 'SHAPE',\n          portId: '',\n          fromLinkable: true,\n          toLinkable: true,\n          cursor: 'pointer'\n        },\n        $(\n          go.Picture,\n          {\n            name: 'Picture',\n            desiredSize: new go.Size(65, 50),\n            margin: new go.Margin(6, 8, 6, 10)\n          },\n          new go.Binding('source')\n        ),\n        $(\n          go.Panel,\n          'Table',\n          {\n            maxSize: new go.Size(150, 999),\n            margin: new go.Margin(6, 10, 0, 3),\n            defaultAlignment: go.Spot.Left\n          },\n          $(go.RowColumnDefinition, { column: 2, width: 4 }),\n          $(\n            go.TextBlock,\n            {\n              row: 0,\n              column: 0,\n              columnSpan: 5,\n              font: '12pt Segoe UI,sans-serif',\n              editable: true,\n              isMultiline: false,\n              minSize: new go.Size(10, 16)\n            },\n            new go.Binding('text', 'name').makeTwoWay()\n          ),\n          $(go.TextBlock, 'Title: ', { row: 1, column: 0 }),\n          $(\n            go.TextBlock,\n            {\n              row: 1,\n              column: 1,\n              columnSpan: 4,\n              editable: true,\n              isMultiline: false,\n              minSize: new go.Size(10, 14),\n              margin: new go.Margin(0, 0, 0, 3)\n            },\n            new go.Binding('text', 'title').makeTwoWay()\n          ),\n          $(\n            go.TextBlock,\n            { row: 2, column: 0 },\n            new go.Binding('text', 'key', function(v) {\n              return 'ID: ' + v;\n            })\n          ),\n          $(\n            go.TextBlock,\n            { name: 'boss', row: 2, column: 3 },\n            new go.Binding('text', 'parent', function(v) {\n              return 'Boss: ' + v;\n            })\n          ),\n          $(\n            go.TextBlock,\n            {\n              row: 3,\n              column: 0,\n              columnSpan: 5,\n              font: 'italic 9pt sans-serif',\n              wrap: go.TextBlock.WrapFit,\n              editable: true, // by default newlines are allowed\n              minSize: new go.Size(10, 14)\n            },\n            new go.Binding('text', 'comments').makeTwoWay()\n          )\n        ) // end Table Panel\n      )\n    );\n\n    this.diagram.nodeTemplate.contextMenu = $(\n      go.Adornment,\n      'Vertical',\n      $('ContextMenuButton', $(go.TextBlock, 'Remove Role'), {\n        click: (e, obj) => {\n          // reparent the subtree to this node's boss, then remove the node\n          var node = obj.part.adornedPart;\n          if (node !== null && node.data.key != 1) {\n            this.diagram.startTransaction('reparent remove');\n            var chl = node.findTreeChildrenNodes();\n            // iterate through the children and set their parent key to our selected node's parent key\n            while (chl.next()) {\n              var emp = chl.value;\n              model.setParentKeyForNodeData(emp.data, node.findTreeParentNode().data.key);\n            }\n            // and now remove the selected node itself\n            model.removeNodeData(node.data);\n            this.diagram.commitTransaction('reparent remove');\n          }\n        }\n      }),\n      $('ContextMenuButton', $(go.TextBlock, 'Remove Department'), {\n        click: (e, obj) => {\n          // remove the whole subtree, including the node itself\n          var node = obj.part.adornedPart;\n          if (node !== null) {\n            this.diagram.startTransaction('remove dept');\n            this.diagram.removeParts(node.findTreeParts(), true);\n            this.diagram.commitTransaction('remove dept');\n          }\n        }\n      })\n    );\n\n    let mayWorkFor = (node1, node2) => {\n      if (!(node1 instanceof go.Node)) return false; // must be a Node\n      if (node1 === node2) return false; // cannot work for yourself\n      if (node2.isInTreeOf(node1)) return false; // cannot work for someone who works for you\n      return true;\n    };\n\n    let nodeIdCounter = -1;\n\n    let getNextKey = () => {\n      var key = nodeIdCounter;\n      while (this.diagram.model.findNodeDataForKey(key) !== null) {\n        key = nodeIdCounter--;\n      }\n      return key;\n    };\n\n    // define the Link template\n    this.diagram.linkTemplate = $(\n      go.Link,\n      go.Link.Orthogonal,\n      { corner: 5, relinkableFrom: true, relinkableTo: true },\n      $(go.Shape, { strokeWidth: 4, stroke: '#00a4a4' })\n    ); // the link shape\n\n    model.nodeDataArray = [\n      {\n        key: 1,\n        name: 'Stella Payne Diaz',\n        title: 'CEO',\n        source:\n          'https://images.pexels.com/photos/1239291/pexels-photo-1239291.jpeg?auto=compress&cs=tinysrgb&h=350'\n      },\n      {\n        key: 2,\n        name: 'Luke Warm',\n        title: 'VP Marketing/Sales',\n        parent: 1,\n        source:\n          'https://images.pexels.com/photos/614810/pexels-photo-614810.jpeg?auto=compress&cs=tinysrgb&h=350'\n      },\n      {\n        key: 3,\n        name: 'Meg Meehan Hoffa',\n        title: 'Sales',\n        parent: 2,\n        source:\n          'https://images.pexels.com/photos/324658/pexels-photo-324658.jpeg?auto=compress&cs=tinysrgb&h=350'\n      },\n      {\n        key: 4,\n        name: 'Peggy Flaming',\n        title: 'VP Engineering',\n        parent: 1,\n        source:\n          'https://images.pexels.com/photos/756453/pexels-photo-756453.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'\n      },\n      {\n        key: 5,\n        name: 'Saul Wellingood',\n        title: 'Manufacturing',\n        parent: 4,\n        source:\n          'https://images.pexels.com/photos/941693/pexels-photo-941693.jpeg?auto=compress&cs=tinysrgb&h=350'\n      },\n      {\n        key: 6,\n        name: 'Al Ligori',\n        title: 'Marketing',\n        parent: 2,\n        source:\n          'https://images.pexels.com/photos/407237/pexels-photo-407237.jpeg?auto=compress&cs=tinysrgb&h=350'\n      },\n      {\n        key: 7,\n        name: 'Dot Stubadd',\n        title: 'Sales Rep',\n        parent: 3,\n        source:\n          'https://images.pexels.com/photos/846741/pexels-photo-846741.jpeg?auto=compress&cs=tinysrgb&h=350'\n      },\n      {\n        key: 8,\n        name: 'Les Ismore',\n        title: 'Project Mgr',\n        parent: 5,\n        source:\n          'https://images.pexels.com/photos/709188/pexels-photo-709188.jpeg?auto=compress&cs=tinysrgb&h=350'\n      },\n      {\n        key: 9,\n        name: 'April Lynn Parris',\n        title: 'Events Mgr',\n        parent: 6,\n        source:\n          'https://images.pexels.com/photos/355164/pexels-photo-355164.jpeg?auto=compress&cs=tinysrgb&h=350'\n      },\n      {\n        key: 10,\n        name: 'Anita Hammer',\n        title: 'Process',\n        parent: 5,\n        source:\n          'https://images.pexels.com/photos/818819/pexels-photo-818819.jpeg?auto=compress&cs=tinysrgb&h=350'\n      },\n\n      {\n        key: 11,\n        name: 'Evan Elpus',\n        title: 'Quality',\n        parent: 5,\n        source:\n          'https://images.pexels.com/photos/1036627/pexels-photo-1036627.jpeg?auto=compress&cs=tinysrgb&h=350'\n      },\n      {\n        key: 12,\n        name: 'Lotta B. Essen',\n        title: 'Sales Rep',\n        parent: 3,\n        source:\n          'https://images.pexels.com/photos/462680/pexels-photo-462680.jpeg?auto=compress&cs=tinysrgb&h=350s'\n      }\n    ];\n    this.diagram.model = model;\n  }\n\n  ngOnInit() {\n    this.diagram.div = this.diagramRef.nativeElement;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n// component\nimport { GojsComponent } from './gojs.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: 'gojs', component: GojsComponent }])\n  ],\n  declarations: [GojsComponent]\n})\nexport class GojsModule {}\n"]}